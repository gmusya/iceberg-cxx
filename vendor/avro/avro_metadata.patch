diff --git a/lang/c++/impl/DataFile.cc b/lang/c++/impl/DataFile.cc
index f633b959c..dd2146497 100644
--- a/lang/c++/impl/DataFile.cc
+++ b/lang/c++/impl/DataFile.cc
@@ -80,16 +80,19 @@ DataFileWriterBase::DataFileWriterBase(const char *filename, const ValidSchema &
 }
 
 DataFileWriterBase::DataFileWriterBase(std::unique_ptr<OutputStream> outputStream,
-                                       const ValidSchema &schema, size_t syncInterval, Codec codec) : filename_(),
-                                                                                                      schema_(schema),
-                                                                                                      encoderPtr_(binaryEncoder()),
-                                                                                                      syncInterval_(syncInterval),
-                                                                                                      codec_(codec),
-                                                                                                      stream_(std::move(outputStream)),
-                                                                                                      buffer_(memoryOutputStream()),
-                                                                                                      sync_(makeSync()),
-                                                                                                      objectCount_(0),
-                                                                                                      lastSync_(0) {
+                                       const ValidSchema &schema, size_t syncInterval, Codec codec, const Metadata &metadata) : filename_(),
+                                                                                                                                schema_(schema),
+                                                                                                                                encoderPtr_(binaryEncoder()),
+                                                                                                                                syncInterval_(syncInterval),
+                                                                                                                                codec_(codec),
+                                                                                                                                stream_(std::move(outputStream)),
+                                                                                                                                buffer_(memoryOutputStream()),
+                                                                                                                                sync_(makeSync()),
+                                                                                                                                objectCount_(0),
+                                                                                                                                lastSync_(0) {
+    for (const auto &[key, value] : metadata) {
+        metadata_[key] = value;
+    }
     init(schema, syncInterval, codec);
 }
 
diff --git a/lang/c++/include/avro/DataFile.hh b/lang/c++/include/avro/DataFile.hh
index 8ff5d88c6..271bca4aa 100644
--- a/lang/c++/include/avro/DataFile.hh
+++ b/lang/c++/include/avro/DataFile.hh
@@ -60,6 +60,10 @@ typedef std::array<uint8_t, SyncSize> DataFileSync;
  *  this object.
  */
 class AVRO_DECL DataFileWriterBase {
+public:
+    typedef std::map<std::string, std::vector<uint8_t>> Metadata;
+
+private:
     const std::string filename_;
     const ValidSchema schema_;
     const EncoderPtr encoderPtr_;
@@ -71,8 +75,6 @@ class AVRO_DECL DataFileWriterBase {
     const DataFileSync sync_;
     int64_t objectCount_;
 
-    typedef std::map<std::string, std::vector<uint8_t>> Metadata;
-
     Metadata metadata_;
     int64_t lastSync_;
 
@@ -121,7 +123,7 @@ public:
     DataFileWriterBase(const char *filename, const ValidSchema &schema,
                        size_t syncInterval, Codec codec = NULL_CODEC);
     DataFileWriterBase(std::unique_ptr<OutputStream> outputStream,
-                       const ValidSchema &schema, size_t syncInterval, Codec codec);
+                       const ValidSchema &schema, size_t syncInterval, Codec codec, const Metadata &metadata = {});
 
     DataFileWriterBase(const DataFileWriterBase &) = delete;
     DataFileWriterBase &operator=(const DataFileWriterBase &) = delete;
@@ -159,7 +161,7 @@ public:
                    size_t syncInterval = 16 * 1024, Codec codec = NULL_CODEC) : base_(new DataFileWriterBase(filename, schema, syncInterval, codec)) {}
 
     DataFileWriter(std::unique_ptr<OutputStream> outputStream, const ValidSchema &schema,
-                   size_t syncInterval = 16 * 1024, Codec codec = NULL_CODEC) : base_(new DataFileWriterBase(std::move(outputStream), schema, syncInterval, codec)) {}
+                   size_t syncInterval = 16 * 1024, Codec codec = NULL_CODEC, const DataFileWriterBase::Metadata &metadata = {}) : base_(new DataFileWriterBase(std::move(outputStream), schema, syncInterval, codec, metadata)) {}
 
     DataFileWriter(const DataFileWriter &) = delete;
     DataFileWriter &operator=(const DataFileWriter &) = delete;
@@ -199,6 +201,10 @@ public:
  * The type independent portion of reader.
  */
 class AVRO_DECL DataFileReaderBase {
+public:
+    typedef std::map<std::string, std::vector<uint8_t>> Metadata;
+
+private:
     const std::string filename_;
     std::unique_ptr<InputStream> stream_;
     const DecoderPtr decoder_;
@@ -212,7 +218,6 @@ class AVRO_DECL DataFileReaderBase {
     ValidSchema dataSchema_;
     DecoderPtr dataDecoder_;
     std::unique_ptr<InputStream> dataStream_;
-    typedef std::map<std::string, std::vector<uint8_t>> Metadata;
 
     Metadata metadata_;
     DataFileSync sync_{};
@@ -306,6 +311,11 @@ public:
      * Return the last synchronization point before our current position.
      */
     int64_t previousSync() const;
+
+    /**
+     * Return file metadata.
+     */
+    const auto &metadata() const { return metadata_; }
 };
 
 /**
@@ -421,6 +431,11 @@ public:
      * Return the last synchronization point before our current position.
      */
     int64_t previousSync() { return base_->previousSync(); }
+
+    /**
+     * Return file metadata.
+     */
+    const auto &metadata() const { return base_->metadata(); }
 };
 
 } // namespace avro
